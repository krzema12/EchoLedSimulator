body
{
    background-color: #333;
    font-size: 16px;
    margin: 0px;
}

div#container
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

div#echo-background
{
    background-image: url('images/FromTop.png');
    background-size: 70% 70%;
   	background-position: center;
   	background-repeat: no-repeat;
    width: 30rem;
    height: 30rem;

    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;

    max-width: 100%;
    max-height: 100%;
    overflow: auto;
}

div#echo-pcb
{
    background-image: url('images/PCB.png');
    background-size: 70% 70%;
    background-position: center;
    background-repeat: no-repeat;
    width: 30rem;
    height: 30rem;

    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;

    max-width: 100%;
    max-height: 100%;
    overflow: auto;
}

div#checkboxes
{
    color: #DDD;
    position: absolute;
    top: 100px;
    left: 100px;
    z-index: 100;
    background-color: #2D2D2D;
    font-variant: small-caps;

    & >
    {
        padding: 15px 30px;
    }
}

div#list-of-animations
{
    color: #DDD;
    position: absolute;
    top: 100px;
    left: 420px;
    z-index: 100;
    background-color: #2D2D2D;
    font-variant: small-caps;

    h1
    {
        font-size: 18px;
        margin-left: 20px;
    }

    button
    {
        display: block;
        content: "\a";
        white-space: pre;
        margin: 15px 30px;
    }
}

.polar(@angle, @centerX, @centerY, @radius)
{
    left: @centerX + sin(@angle)*@radius;
    top: @centerY - cos(@angle)*@radius;
}

.ledPositionPolar(@angle)
{
    .polar(@angle, 10.0rem, 9.85rem, 9.85rem);
}

@mic-offset: 32deg; // Angle between vertical axis and the first microphone.

@mic1-angle: -180deg + @mic-offset;
@mic2-angle:  -90deg;
@mic3-angle:  -@mic-offset;
@mic4-angle:   @mic-offset;
@mic5-angle:   90deg;
@mic6-angle:  180deg - @mic-offset;

@mic-angles: mic1-angle, mic2-angle, mic3-angle, mic4-angle, mic5-angle, mic6-angle;

@led-offset: 13deg; // Distance in degrees between a microphone and an LED.

.leds-loop-inner (@i) when (@i >= 0)
{
    &#led@{i}
    {
        @mic-angle-index: floor((@i + 2)/2);
        @name: extract(@mic-angles, @mic-angle-index);

        @this-led-offset: (mod(@i, 2)*2 - 1)*@led-offset;

        .ledPositionPolar(@@name + @this-led-offset);
    }
    .leds-loop-inner(@i - 1);
}

.leds-loop (@quantity)
{
    .leds-loop-inner(@quantity - 1);
}

@leds-quantity: 12;

div#leds
{
    background-size: 100% 100%;
    width: 30rem;
    height: 30rem;

    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;

    max-width: 100%;
    max-height: 100%;
    overflow: auto;

    & > .led
    {
        width: 10rem;
        height: 10rem;

        position: absolute;

        .leds-loop(@leds-quantity);
    }
}

.proper-blending-mode
{
    mix-blend-mode: screen;
}

div#masking-leds
{
    background-image: url('images/nasty-mask.png');
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
    width: 30rem;
    height: 30rem;

    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
}

// Debug utilities.

.debug(@var) {
  &:after {
    content: ~`console.log("@{var}"), "@{var}"`;
    font-size: 20px;
    background-color: #fff;
    border: 1px solid red;
    padding: 10px;
    border-radius: 5px;
    color: red;
    font-weight: bold;
    position: absolute;
    top: 50%;
    left: 50%;
  }
}

.log(@var) {
  &:after {
    content: ~`console.log("@{var}"), "@{var}"`;
  }
}
